{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport { useState } from \"react\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLinked = _useState[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // ? -> 옵셔널 체이닝\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"connent\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\"))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"68bNnGVan1GlL2+ANrHfihG2jmM=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["PropTypes","Avatar","Button","Card","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","useState","PostCard","_ref","_s","post","_useState","liked","setLinked","id","state","_state$user$me","user","me","__jsx","style","marginBottom","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","content","Group","User","React","Fragment","type","Meta","avatar","nickname","title","description","_c","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired","$RefreshReg$"],"sources":["/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/components/PostCard.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport { useState } from \"react\";\n\nconst PostCard = ({ post }) => {\n  const [liked, setLinked] = useState(false);\n  const id = useSelector((state) => state.user.me?.id); // ? -> 옵셔널 체이닝\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          <HeartOutlined key=\"heart\" />,\n          <MessageOutlined key=\"connent\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <>\n                    <Button>신고</Button>\n                  </>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}