{"ast":null,"code":"import shortId from \"shortid\";\nimport { produce } from \"immer\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      src: \"https://loremflickr.com/1280/720\"\n    }, {\n      src: \"https://picsum.photos/1280/720\"\n    }, {\n      src: \"https://placebear.com/1280/720\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePost = function removePost(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    }\n  };\n};\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data)); // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.data;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","removePost","addComment","dummyPost","dummyComment","generate","reducer","state","arguments","length","undefined","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport { produce } from \"immer\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"수인\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Images: [\n        {\n          src: \"https://loremflickr.com/1280/720\",\n        },\n        {\n          src: \"https://picsum.photos/1280/720\",\n        },\n        {\n          src: \"https://placebear.com/1280/720\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판이 나왔군요~\",\n        },\n        {\n          User: {\n            nickname: \"hero\",\n          },\n          content: \"얼른 사고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const removePost = (data) => ({\n  type: REMOVE_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n});\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data)); // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.data;\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}