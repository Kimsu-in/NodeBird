{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport shortId from \"shortid\";\nimport produce from \"immer\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      src: \"https://loremflickr.com/1280/720\"\n    }, {\n      src: \"https://picsum.photos/1280/720\"\n    }, {\n      src: \"https://placebear.com/1280/720\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"배가 고파요!\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"집에 가고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePost = function removePost(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    }\n  };\n};\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts = [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)); // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: false,\n          addPostError: action.error\n        });\n      case REMOVE_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null\n        });\n      case REMOVE_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          }),\n          removePostLoading: true,\n          removePostDone: true\n        });\n      case REMOVE_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: false,\n          removePostError: action.error\n        });\n      case ADD_COMMENT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n      case ADD_COMMENT_SUCCESS:\n        {\n          var postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id == action.data.postId;\n          });\n          var post = _objectSpread({}, state.mainPosts[postIndex]);\n          post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n          var mainPosts = _toConsumableArray(state.mainPosts);\n          mainPosts[postIndex] = post;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            mainPosts: mainPosts,\n            addCommentLoading: false,\n            addCommentDone: true\n          });\n        }\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n      default:\n        return state;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","removePost","addComment","dummyPost","dummyComment","reducer","state","arguments","length","undefined","action","draft","concat","_toConsumableArray","error","_objectSpread","filter","v","postIndex","findIndex","postId","post"],"sources":["/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"수인\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Images: [\n        {\n          src: \"https://loremflickr.com/1280/720\",\n        },\n        {\n          src: \"https://picsum.photos/1280/720\",\n        },\n        {\n          src: \"https://placebear.com/1280/720\",\n        },\n      ],\n      Comments: [\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"nero\",\n          },\n          content: \"배가 고파요!\",\n        },\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"hero\",\n          },\n          content: \"집에 가고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const removePost = (data) => ({\n  type: REMOVE_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n});\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts = [dummyPost(action.data), ...state.mainPosts]; // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        return {\n          ...state,\n          addPostLoading: false,\n          addPostError: action.error,\n        };\n      case REMOVE_POST_REQUEST:\n        return {\n          ...state,\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null,\n        };\n      case REMOVE_POST_SUCCESS:\n        return {\n          ...state,\n          mainPosts: state.mainPosts.filter((v) => v.id !== action.data),\n          removePostLoading: true,\n          removePostDone: true,\n        };\n      case REMOVE_POST_FAILURE:\n        return {\n          ...state,\n          removePostLoading: false,\n          removePostError: action.error,\n        };\n      case ADD_COMMENT_REQUEST:\n        return {\n          ...state,\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null,\n        };\n      case ADD_COMMENT_SUCCESS: {\n        const postIndex = state.mainPosts.findIndex(\n          (v) => v.id == action.data.postId,\n        );\n        const post = { ...state.mainPosts[postIndex] };\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n\n        return {\n          ...state,\n          mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true,\n        };\n      }\n\n      case ADD_COMMENT_FAILURE:\n        return {\n          ...state,\n          addCommentLoading: false,\n          addCommentError: action.error,\n        };\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}