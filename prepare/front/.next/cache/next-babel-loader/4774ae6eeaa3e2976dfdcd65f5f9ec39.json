{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/components/CommentForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone;\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"mM6CS628luhUq9CAqU3Lfmbq6g4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","_ref","_s","post","dispatch","id","state","_state$user$me","user","me","_useSelector","addCommentDone","_useInput","_useInput2","_slicedToArray","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","__jsx","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","style","position","margin","TextArea","value","onChange","rows","right","bottom","zIndex","htmlType","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone } = useSelector((state) => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          value={commentText}\n          onChange={onChangeCommentText}\n          rows={4}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}