{"ast":null,"code":"import shortId from \"shortid\";\nimport { produce } from \"immer\";\nimport faker from \"faker\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://loremflickr.com/1280/720\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://picsum.photos/1280/720\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://placebear.com/1280/720\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\ninitialState.mainPosts = initialState.mainPosts.concat(Array(20).fill().map(function () {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePost = function removePost(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"수인\"\n    }\n  };\n};\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data)); // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.data;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","concat","Array","fill","map","name","findName","lorem","paragraph","image","sentence","addPost","data","type","removePost","addComment","dummyPost","dummyComment","reducer","state","arguments","length","undefined","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["/home/kimsuin/study/react/inflearn/next/nodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport { produce } from \"immer\";\nimport faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"수인\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Images: [\n        {\n          id: shortId.generate(),\n          src: \"https://loremflickr.com/1280/720\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://picsum.photos/1280/720\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://placebear.com/1280/720\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판이 나왔군요~\",\n        },\n        {\n          User: {\n            nickname: \"hero\",\n          },\n          content: \"얼른 사고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\ninitialState.mainPosts = initialState.mainPosts.concat(\n  Array(20)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [\n        {\n          src: faker.image(),\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    })),\n);\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const removePost = (data) => ({\n  type: REMOVE_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"수인\",\n  },\n});\n\n// reducer 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data)); // dummyPost를 앞에 붙여야 게시물 제일 앞에 올라감.\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.data;\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}